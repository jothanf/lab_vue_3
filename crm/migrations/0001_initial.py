# Generated by Django 5.0.2 on 2024-12-06 19:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_clientemodel'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AmenidadesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('categoria', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BarrioModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('sigla', models.CharField(blank=True, max_length=10)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('ubicacion', models.JSONField(blank=True, null=True)),
                ('estrato_predominante', models.IntegerField(blank=True, null=True)),
                ('tipo_zona', models.CharField(choices=[('residencial', 'Residencial'), ('comercial', 'Comercial'), ('mixta', 'Mixta'), ('industrial', 'Industrial')], default='residencial', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CaracteristicasInterioresModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caracteristica', models.CharField(max_length=100)),
                ('categoria', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactoAdministradorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('telefono', models.CharField(max_length=20)),
                ('correo', models.EmailField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EdificacionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocalidadModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('sigla', models.CharField(blank=True, max_length=10, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('ubicacion', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ZonasDeInteresModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('categoria', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('ubicacion', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EdificioModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('sigla', models.CharField(blank=True, max_length=10)),
                ('desarrollador', models.CharField(blank=True, max_length=100, null=True)),
                ('direccion', models.CharField(max_length=200)),
                ('estrato', models.IntegerField(blank=True, null=True)),
                ('telefono', models.CharField(max_length=20)),
                ('unidades', models.JSONField(blank=True, help_text='\n        {\n            "tipos_apartamentos": [\n                {\n                    "modelo": "Apartamento 3 piezas",\n                    "area": 40,\n                    "precio": 200000000,\n                    "cantidad_disponible": 10\n                },\n                {\n                    "modelo": "Apartamento 3 piezas",\n                    "area": 50,\n                    "precio": 250000000,\n                    "cantidad_disponible": 8\n                }\n            ]\n        }\n    ', null=True)),
                ('torres', models.IntegerField(default=1)),
                ('parqueaderos', models.IntegerField(default=0)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('ubicacion', models.JSONField(max_length=255)),
                ('ano_construccion', models.IntegerField(blank=True, null=True)),
                ('servicios_adicionales', models.TextField(blank=True, null=True)),
                ('amenidades', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.amenidadesmodel')),
                ('barrio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.barriomodel')),
                ('contacto_administrador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.contactoadministradormodel')),
                ('localidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.localidadmodel')),
            ],
        ),
        migrations.AddField(
            model_name='barriomodel',
            name='localidad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.localidadmodel'),
        ),
        migrations.CreateModel(
            name='PropiedadModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('modalidad_de_negocio', models.JSONField(help_text='\n        Formato esperado:\n        {\n            "venta_tradicional": {"activo": true, "precio": 500000000},\n            "renta_tradicional": {"activo": false, "precio": 0},\n            "renta_amoblado": {"activo": true, "precio": 3500000}\n        }\n        ')),
                ('tipo', models.CharField(blank=True, max_length=50, null=True)),
                ('direccion', models.JSONField(help_text='\n        Formato esperado:\n        {\n            "direccion": "Calle 123",\n            "datos_adicionales": {\n                "interior": "123",\n                "torre": "A",\n                "apartamento": "101"\n            },\n            "coordenada_1": "1234567890",\n            "coordenada_2": "0987654321"\n        }\n        ')),
                ('nivel', models.IntegerField(blank=True, null=True)),
                ('metro_cuadrado_construido', models.IntegerField(blank=True, null=True)),
                ('metro_cuadrado_propiedad', models.IntegerField(blank=True, null=True)),
                ('habitaciones', models.IntegerField(blank=True, default=0, null=True)),
                ('habitacion_de_servicio', models.IntegerField(blank=True, default=0, null=True)),
                ('banos', models.IntegerField(blank=True, default=0, null=True)),
                ('terraza', models.CharField(blank=True, default='no', help_text='\n        una terraza de 10 m2\n    ', max_length=50, null=True)),
                ('balcon', models.CharField(blank=True, default='no', help_text='\n        un balcón de 10 m2\n    ', max_length=50, null=True)),
                ('garajes', models.JSONField(blank=True, help_text='\n        Formato esperado:\n        {\n            "cantidad": "1",\n            "id": "1234567890"\n        }\n    ', null=True)),
                ('depositos', models.JSONField(blank=True, help_text='\n        Formato esperado:\n        {\n            "cantidad": "1",\n            "id": "1234567890"\n        }\n    ', null=True)),
                ('mascotas', models.CharField(choices=[('si', 'Sí'), ('no', 'No')], default='no', max_length=2)),
                ('estrato', models.IntegerField(blank=True, null=True)),
                ('valor_predial', models.IntegerField(blank=True, default=0, null=True)),
                ('valor_administracion', models.IntegerField(blank=True, default=0, null=True)),
                ('ano_construccion', models.IntegerField(blank=True, null=True)),
                ('informacion_legal_financiera', models.JSONField(blank=True, help_text='\n        Formato esperado:\n        {\n            "certificado libertat y tadicion": "si",\n            "hipoteca":"si"\n        }\n    ', null=True)),
                ('fecha_ingreso', models.DateTimeField(auto_now_add=True)),
                ('codigo', models.CharField(max_length=50)),
                ('estado_inmueble', models.JSONField(blank=True, help_text='\n        Formato esperado:\n        {\n            "estado": "disponible",\n            "motivo": "porque es nuevo"\n        }\n    ', null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('documentos', models.JSONField(blank=True, null=True)),
                ('notas', models.JSONField(blank=True, null=True)),
                ('honorarios', models.JSONField(blank=True, null=True)),
                ('agente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.agentemodel')),
                ('amenidades', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.amenidadesmodel')),
                ('barrio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.barriomodel')),
                ('caracteristicas_interiores', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.caracteristicasinterioresmodel')),
                ('edificacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.edificacionmodel')),
                ('edificio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.edificiomodel')),
                ('localidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.localidadmodel')),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.clientemodel')),
            ],
        ),
        migrations.CreateModel(
            name='TareaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_vencimiento', models.DateTimeField()),
                ('tipo_tarea', models.CharField(choices=[('llamada_seguimiento', 'Llamada de Seguimiento'), ('visita_inmueble', 'Visita a Inmueble'), ('documentacion', 'Documentación'), ('verificacion_datos', 'Verificación de Datos'), ('cierre', 'Cierre')], max_length=50)),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta')], max_length=20)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En Proceso'), ('completada', 'Completada'), ('cancelada', 'Cancelada')], max_length=20)),
                ('descripcion', models.TextField()),
                ('agente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.agentemodel')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.clientemodel')),
                ('propiedad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.propiedadmodel')),
            ],
        ),
        migrations.CreateModel(
            name='FaseSeguimientoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('descripcion', models.TextField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En Proceso'), ('completada', 'Completada'), ('cancelada', 'Cancelada')], max_length=20)),
                ('archivos_adjuntos', models.FileField(blank=True, null=True, upload_to='fases_seguimiento/')),
                ('notas_internas', models.TextField(blank=True, null=True)),
                ('resultado', models.TextField(blank=True, null=True)),
                ('agente_responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.agentemodel')),
                ('tarea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fases', to='crm.tareamodel')),
            ],
            options={
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='ZonaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('sigla', models.CharField(blank=True, max_length=10)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('ubicacion', models.JSONField(blank=True, null=True)),
                ('tipo_zona', models.CharField(max_length=20)),
                ('localidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.localidadmodel')),
                ('zonas_de_interes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.zonasdeinteresmodel')),
            ],
            options={
                'verbose_name': 'Zona',
                'verbose_name_plural': 'Zonas',
                'ordering': ['nombre'],
            },
        ),
        migrations.AddField(
            model_name='propiedadmodel',
            name='zona',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.zonamodel'),
        ),
        migrations.AddField(
            model_name='edificiomodel',
            name='zona',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.zonamodel'),
        ),
        migrations.AddField(
            model_name='barriomodel',
            name='zona',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.zonamodel'),
        ),
        migrations.AddField(
            model_name='propiedadmodel',
            name='zonas_de_interes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.zonasdeinteresmodel'),
        ),
        migrations.AddField(
            model_name='localidadmodel',
            name='zonas_de_interes',
            field=models.ManyToManyField(blank=True, related_name='localidades', to='crm.zonasdeinteresmodel'),
        ),
        migrations.AddField(
            model_name='edificiomodel',
            name='zonas_de_interes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.zonasdeinteresmodel'),
        ),
        migrations.AddField(
            model_name='barriomodel',
            name='zonas_de_interes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.zonasdeinteresmodel'),
        ),
        migrations.CreateModel(
            name='MultimediaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('tipo', models.CharField(choices=[('foto', 'Fotografía'), ('video', 'Video')], max_length=5)),
                ('archivo', models.FileField(upload_to='multimedia/')),
                ('titulo', models.CharField(blank=True, max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('es_principal', models.BooleanField(default=False)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Multimedia',
                'verbose_name_plural': 'Multimedia',
                'ordering': ['-es_principal', '-fecha_subida'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='crm_multime_content_f8066e_idx')],
            },
        ),
        migrations.CreateModel(
            name='RequerimientoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_ingreso', models.DateTimeField(auto_now_add=True)),
                ('tiempo_estadia', models.IntegerField(blank=True, null=True)),
                ('tipo_negocio', models.JSONField()),
                ('habitantes', models.IntegerField(default=0)),
                ('area_minima', models.IntegerField(blank=True, null=True)),
                ('area_maxima', models.IntegerField(blank=True, null=True)),
                ('area_lote', models.IntegerField(blank=True, null=True)),
                ('presupuesto_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('presupuesto_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('habitaciones', models.IntegerField(default=0)),
                ('habitaciones_servicio', models.IntegerField(default=0)),
                ('banos', models.IntegerField(default=0)),
                ('parqueaderos', models.IntegerField(default=0)),
                ('depositos', models.IntegerField(default=0)),
                ('mascotas', models.CharField(choices=[('si', 'Sí'), ('no', 'No')], default='no', max_length=2)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('cercanias', models.JSONField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En Proceso'), ('completado', 'Completado')], default='pendiente', max_length=20)),
                ('edificacion', models.JSONField(blank=True, help_text='\n        Formato esperado:\n        {\n            "tipos": ["centro_comercial", "centro_empresarial", "condominio_campestre", \n                     "edificio_independiente", "independiente", "parcelacion", \n                     "unidad_cerrada", "unidad_cerrada_con_zonas_comunes"]\n        }\n        ', null=True)),
                ('prioridad', models.CharField(default='normal', help_text='\n        normal, alta, baja\n    ', max_length=20)),
                ('fecha_ideal_entrega', models.DateTimeField(blank=True, null=True)),
                ('informacion_legal_financiera', models.JSONField(blank=True, null=True)),
                ('honorarios', models.JSONField(blank=True, null=True)),
                ('comentarios', models.JSONField(blank=True, null=True)),
                ('agente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.agentemodel')),
                ('barrio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.barriomodel')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.clientemodel')),
                ('edificio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.edificiomodel')),
                ('localidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.localidadmodel')),
                ('zona', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.zonamodel')),
            ],
            options={
                'db_table': 'requerimientos',
                'indexes': [models.Index(fields=['tipo_negocio'], name='requerimien_tipo_ne_c52275_idx'), models.Index(fields=['estado'], name='requerimien_estado_5f7dd6_idx')],
            },
        ),
    ]
